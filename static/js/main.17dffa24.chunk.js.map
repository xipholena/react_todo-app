{"version":3,"sources":["components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/TodoApp/TodoApp.jsx","App.js","index.js"],"names":["TodoItem","todo","id","completed","getCheckedTodoId","useState","status","setStatus","className","classNames","onChange","e","type","onClick","TodoList","items","map","item","key","TodoApp","todos","setTodos","setTodo","checkboxDisabled","setcheckboxState","preparedTodo","Date","filter","length","onSubmit","preventDefault","currentState","placeholder","value","target","disabled","htmlFor","chosenId","chosenTodo","find","every","href","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17dffa24.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport classNames from 'classnames'\n\nexport const TodoItem = ({todo, completed, id, getCheckedTodoId}) => {\n  const [status, setStatus] = useState(false);\n  const checkHandler = (e) => {\n    setStatus(!status);\n  }\n  return(\n    <li\n      className={classNames('', {completed: status === true})}\n    >\n      <div className=\"view\">\n        <input \n          onChange={checkHandler}\n          type=\"checkbox\" \n          className=\"toggle\"\n          onClick={()=>{getCheckedTodoId(id)}}\n        />\n        <label>{todo}</label>\n        <button type=\"button\" className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  )\n}\n","import React from 'react';\nimport {TodoItem} from '../TodoItem'\n\nexport const TodoList = ({items, getCheckedTodoId}) => {\n  return(\n    <>\n    <ul className=\"todo-list\">\n        <li>\n          <div className=\"view\">\n            <input type=\"checkbox\" className=\"toggle\" />\n            <label>asdfghj</label>\n            <button type=\"button\" className=\"destroy\" />\n          </div>\n          <input type=\"text\" className=\"edit\" />\n        </li>\n\n        <li className=\"completed\">\n          <div className=\"view\">\n            <input type=\"checkbox\" className=\"toggle\" />\n            <label>qwertyuio</label>\n            <button type=\"button\" className=\"destroy\" />\n          </div>\n          <input type=\"text\" className=\"edit\" />\n        </li>\n\n        <li className=\"editing\">\n          <div className=\"view\">\n            <input type=\"checkbox\" className=\"toggle\" />\n            <label>zxcvbnm</label>\n            <button type=\"button\" className=\"destroy\" />\n          </div>\n          <input type=\"text\" className=\"edit\" />\n        </li>\n\n        <li>\n          <div className=\"view\">\n            <input type=\"checkbox\" className=\"toggle\" />\n            <label>1234567890</label>\n            <button type=\"button\" className=\"destroy\" />\n          </div>\n          <input type=\"text\" className=\"edit\" />\n        </li>\n      </ul>\n\n    <ul className=\"todo-list\">{items.map(item => (\n        <TodoItem \n          key={item.id}\n          todo={item.todo}\n          completed={item.completed}\n          id={item.id}\n          getCheckedTodoId={getCheckedTodoId}/>\n    ))}\n    </ul>\n    </>\n  )\n}\n","import React, {useState}  from 'react';\nimport {TodoList} from '../TodoList'\n\nexport const TodoApp = () => {\n  const [todos, setTodos] = useState([]);\n  const [todo, setTodo] = useState('');\n  const [checkboxDisabled, setcheckboxState] = useState(true);\n\n  const getCheckedTodoId = (chosenId) => {\n   const chosenTodo = todos.find(todo=>todo.id === chosenId);\n   chosenTodo.completed = !chosenTodo.completed;\n     if (todos.every(todo=> todo.completed)){\n        setcheckboxState(false)\n    } else {\n      setcheckboxState(true)\n    }\n  }\n\n  const changeHandler = (e) => {\n    setTodo(e.target.value)\n  }\n  const preparedTodo = {\n    todo: todo,\n    completed: false,\n    id: +(new Date()),\n  }\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setTodos(currentState => ([\n      ...currentState,\n      preparedTodo\n    ]));\n    clearInput();\n  }\n  function clearInput() {\n    setTodo('');\n  }\n  return (\n    <section className=\"todoapp\">\n    <header className=\"header\">\n      <h1>todos</h1>\n      <h2>Uncompleted todos = {todos.filter(todo=>!todo.completed).length}</h2>\n      <form\n        onSubmit={submitHandler}\n      >\n        <input\n          type=\"text\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={todo}\n          onChange={changeHandler}\n        />\n      </form>\n    </header>\n\n    <section className=\"main\">\n      <input \n        type=\"checkbox\" \n        id=\"toggle-all\" \n        className=\"toggle-all\" \n        disabled={checkboxDisabled}\n        /*onChange={handleCheck}*/\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n      <TodoList \n        items={todos}\n        getCheckedTodoId={getCheckedTodoId}\n       />\n      \n    </section>\n\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        3 items left\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a href=\"#/\" className=\"selected\">All</a>\n        </li>\n\n        <li>\n          <a href=\"#/active\">Active</a>\n        </li>\n\n        <li>\n          <a href=\"#/completed\">Completed</a>\n        </li>\n      </ul>\n\n      <button type=\"button\" className=\"clear-completed\">\n        Clear completed\n      </button>\n    </footer>\n    \n  </section>\n  )\n}\n","import React from 'react';\nimport {TodoApp} from './components/TodoApp'\n\nfunction App() {\n  return (\n   <TodoApp/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}